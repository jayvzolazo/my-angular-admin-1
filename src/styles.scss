/* You can add global styles to this file, and also import other style files */
$warning: #ffc107;
$danger: #dd0031;
$success: #28a745;
$info: #17a2b8;

body {
  font-size: 13px !important;
}

a {
  &:hover {
    text-decoration: none;
  }
}

.main {
  .body {
    padding: 1rem;
    height: auto;
  }
}

.navbar-dropdown {
  border: 1px solid #e2e2e2;
  box-shadow: 0px 2px 6px #d6d6d6;
  width: 15rem;

  .arrow {
    left: 12% !important;
  }

  .popover-body {
    padding: 0 !important;
  }
}


/* BOX STYLING */
$boxcolor: #dee2e6;

@mixin border($top, $right, $bottom, $left) {
  border-top: $top;
  border-right: $right;
  border-bottom: $bottom;
  border-left: $left;
  border-style: solid;
  border-color: #cccccc;
}

@mixin borderRadius($topLeft, $topRight, $botRight, $botLeft) {
  border-top-left-radius: $topLeft;
  border-top-right-radius: $topRight;
  border-bottom-right-radius: $botRight;
  border-bottom-left-radius: $botLeft;
}

@mixin boxColor($color) {
  border-color: $color !important;
  color: $color;
}

$defaultRadius: 0.5rem;

.box {
  border: 1px solid $boxcolor;
  background: #ffffff;
  border-radius: $defaultRadius;
  padding: 1rem;

  &.warning {
    @include boxColor($warning);
  }

  &.danger {
    @include boxColor($danger);
  }

  &.success {
    @include boxColor($success);
  }

  &.info {
    @include boxColor($info);
  }
}

.stacked-box {
  border: 1px solid $boxcolor;
  background: #ffffff;
  border-radius: $defaultRadius;
  width: 100%;

  .box-item {
    padding: 1rem;
    @include border(0, 0, 1px, 0);
    
    &:first-child {
      @include borderRadius($defaultRadius, $defaultRadius, 0, 0);
    }

    &:last-child {
      @include border(0, 0, 0, 0);
    }
  }

  &.inline {
    display: flex;
    

    .box-item {
      width: 100%;
      flex-basis: 0;
      flex-grow: 1;
      padding: 1rem;
      @include border(0, 1px, 0, 0);
      
      &:first-child {
        @include borderRadius($defaultRadius, 0, 0, $defaultRadius);
      }

      &:last-child {
        @include border(0, 0, 0, 0);
      }
    }
  }
}
/* END OF BOX STYLING */

/* BUTTONS STYLING */
.btn {
  font-size: 0.9rem !important;
  
  &.btn-default {
    background: linear-gradient(180deg,#fff,#f5f5f5);
    border-color: #dcdcdc;
  }

  &.btn-outline-default {
    background: #ffffff;
    border-color: #dcdcdc;
  }

  &.active {
    background: -webkit-gradient(linear,left top,left bottom,from(#fff),to(#fff));
    background: linear-gradient(180deg,#fff,#fff);
    -webkit-box-shadow: inset 0 1px 1px 0 rgba(19,29,40,.1), inset 0 1px 4px 0 rgba(19,29,40,.2);
    box-shadow: inset 0 1px 1px 0 rgba(19,29,40,.1), inset 0 1px 4px 0 rgba(19,29,40,.2);
  }
}

.btn-group {
  label {
    font-size: 0.9rem !important;
  }
} 
/* END OF BUTTONS STYLING */